import asyncio

async def factorial(name, number):
    f = 1
    for i in range(2, number + 1):
        print(f"Task {name}: Compute factorial({i})...")
        await asyncio.sleep(1)
        f *= i
    print(f"Task {name}: factorial({number}) = {f}")

async def main():
    await asyncio.gather(
        factorial("A", 0),
        factorial("B", 3),
        factorial("C", 4),
    )

loop = asyncio.get_event_loop()
loop.run_until_complete(main())
loop.close()

"""Приведенный выше код использует asyncio для вычисления факториала нескольких чисел одновременно.

Функция `факториал` вычисляет факториал заданного числа. Он принимает два параметра: имя для идентификации задачи и 

число, для которого вычисляется факториал. Он использует цикл for для итерации от 2 до заданного числа и умножает каждое число на 

предыдущий факториал. Он также выводит на печать ход выполнения вычисления.

Функция "main" использует `asyncio.gather` для одновременного выполнения нескольких `факториальных` задач. Он передает задачи в 

качестве аргументов в "gather" и ожидает их завершения.

Последняя часть кода настраивает цикл обработки событий, запускает функцию `main` до завершения, а затем закрывает цикл."""